# base setup picked up from https://github.com/envoyproxy/envoy/blob/master/examples/front-proxy/front-envoy.yaml
# see this if you face issues
# - https://github.com/envoyproxy/envoy/issues/10105 (regarding the filter name)
#https://github.com/envoyproxy/envoy/issues/8016 - regarding per endpoint  TLS
static_resources:
  listeners:
    - address:
        socket_address:
          address: 0.0.0.0
          port_value: 8002

      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/kotlin"
                          route:
                            cluster: kotlin_aggr_cluster
                        - match:
                            prefix: "/"
                          route:
                            host_rewrite: www.google.com
                            cluster: google_srvc_cluster
                http_filters:
                  - name: envoy.router
                    typed_config: {}
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                  certificate_chain: { "filename": "/etc/envoy/cert.crt" }
                  private_key: { "filename": "/etc/envoy/cert.key" }


  #ref: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto
  #ref: https://github.com/envoyproxy/envoy/blob/86ac9389fa0ad940879352b012a0dc73d89b90b0/test/extensions/clusters/aggregate/cluster_integration_test.cc
  clusters:
    - name: kotlin_aggr_cluster
      connect_timeout: 0.25s
      lb_policy: CLUSTER_PROVIDED
      transport_socket_matches:
        - name: "enableMTLS"
          match:
            acceptMTLS: true
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
              common_tls_context:
                alpn_protocols: [h2,http/1.1]
        - name: "googleMTLS"
          match:
            isGoogleMTLS: true
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
              sni: "www.google.com"
              common_tls_context:
                alpn_protocols: [h2,http/1.1]

        - name: "defaultToPlaintext"
          match: {}
          transport_socket:
            name: envoy.transport_sockets.raw_buffer
      cluster_type:
        name: envoy.clusters.aggregate
        typed_config:
          "@type": type.googleapis.com/envoy.config.cluster.aggregate.v2alpha.ClusterConfig
          clusters:
            - kotlin_cluster_1
            - kotlin_cluster_2

    #ref: https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/aggregate_cluster
    - name: kotlin_cluster_1
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: kotlin_cluster_1
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.17.0.2
                      port_value: 8443
                metadata:
                  filter_metadata:
                    envoy.transport_socket:
                      acceptMTLS: true
              - endpoint:
                  address:
                    socket_address:
                      address: 172.17.0.3
                      port_value: 8443
                metadata:
                  filter_metadata: {"envoy.transport_socket": {"acceptMTLS": true}}
            priority: 0
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.17.0.4
                      port_value: 8443
                metadata:
                  filter_metadata: {"envoy.transport_socket": {"acceptMTLS": true}}
            priority: 1
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
          common_tls_context:
            alpn_protocols: [h2,http/1.1]

      health_checks:
        timeout: 0.25s
        interval: 60s
        unhealthy_threshold: 3
        healthy_threshold: 1
        http_health_check:
          path: "/kotlin/healthy"

    - name: kotlin_cluster_2
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: kotlin_cluster_2
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 172.17.0.5
                      port_value: 8080
              - endpoint:
                  address:
                    socket_address:
                      address: 172.17.0.6
                      port_value: 8080
              - endpoint:
                  address:
                    socket_address:
                      address: 172.17.0.7
                      port_value: 8080

      health_checks:
        timeout: 0.25s
        interval: 60s
        unhealthy_threshold: 3
        healthy_threshold: 1
        http_health_check:
          path: "/kotlin/healthy"


    - name: google_srvc_cluster
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      http2_protocol_options: {}
      load_assignment:
        cluster_name: google_srvc_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: www.google.com
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
          sni: "www.google.com"

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
